# This workflow is designed to update the documentation when a new version is
# detected.

name: Publish Documentation

# When a new (version) tag is detected run this workflow
on:
  push:
    # only run if the tag is a supported version tag
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  # This attribute allows to manually trigger the workflow from the
  # Actions tab from the GitHub website
  workflow_dispatch:

env:
  # The name of the application
  APPLICATION_NAME: moonpiebot
  # The URL to the repository source files
  GITHUB_URL_REPO: https://github.com/${{ github.repository }}/blob/${{ github.sha }}

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
 # Job that publishes the documentation to GitHub pages
  publish-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [20.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - uses: actions/configure-pages@v2
      - run: npm ci
      - name: Install documentation dependencies (apt - ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install graphviz
      - name: Install documentation dependencies (choco - windows-latest)
        if: matrix.os == 'windows-latest'
        run: choco install graphviz
      - run: npm run docs
      - name: Modify documentation
        if: matrix.os == 'ubuntu-latest'
        run: |
          # Add application icon
          mkdir -p docs/res/icons
          cp res/icons/${{ env.APPLICATION_NAME }}.png docs/res/icons/
          # Rename paths to example files
          sed -i "s#href=\"./.env#href=\"${{ env.GITHUB_URL_REPO }}/.env#g" docs/index.html
          sed -i "s#href=\"./installer#href=\"${{ env.GITHUB_URL_REPO }}/installer#g" docs/index.html
          sed -i "s#href=\"./custom#href=\"${{ env.GITHUB_URL_REPO }}/custom#g" docs/index.html
          sed -i "s#href=\"src/#href=\"${{ env.GITHUB_URL_REPO }}/src/#g" docs/index.html
          # Add favicon (doesn't work for more than the first page)
          cp res/icons/${{ env.APPLICATION_NAME }}.ico docs/favicon.ico
          sed -i "s#</title>#</title><link rel=\"icon\" type=\"image/x-icon\" href=\"./favicon.ico\">#g" docs/index.html
      # Upload generated documentation and deploy it
      - uses: actions/upload-pages-artifact@v1
        with:
          path: docs
      - uses: actions/deploy-pages@v1
        id: deployment
