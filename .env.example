# This is an example config file for the MoonpieBot that contains all
# environment variables that the bot uses.
# You can either set the variables yourself or copy this file, rename it from
# `.env.example` to `.env` and edit it with your own values since this is just
# an example to show how it should look.
# If a line that starts with 'MOONPIE_CONFIG_' has the symbol '#' in front of it
# that means it will be ignored as a comment. This means you can add custom
# comments and easily enable/disable any 'MOONPIE_CONFIG_' option by adding or
# removing that symbol.

################################################################################
# LOGGING
# ------------------------------------------------------------------------------
# Customize how much and where should be logged.
################################################################################
# > The log level of the log messages that are printed to the console.
#   Supported values: 'debug', 'error', 'info', 'warn'
#MOONPIE_CONFIG_LOGGING_CONSOLE_LOG_LEVEL=info
# > The directory file path of the log files
#   Legacy name: 'MOONPIE_CONFIG_DIR_LOGS'
#MOONPIE_CONFIG_LOGGING_DIRECTORY_PATH=logs
# > The log level of the log messages that are written to the log files.
#   Supported values: 'debug', 'error', 'info', 'warn'
#   Legacy name: 'MOONPIE_CONFIG_FILE_LOG_LEVEL'
#MOONPIE_CONFIG_LOGGING_FILE_LOG_LEVEL=debug

################################################################################
# TWITCH
# ------------------------------------------------------------------------------
# Required variables that need to be set for ANY configuration to connect to
# Twitch chat.
################################################################################
# > A with a space separated list of all the channels the bot should be active.
#   Legacy name: 'MOONPIE_CONFIG_TWITCH_CHANNEL'
#   THIS VARIABLE IS REQUIRED!
#   (The following line is only an example!)
MOONPIE_CONFIG_TWITCH_CHANNELS="twitch_channel_name1 twitch_channel_name2"
# > Turn on debug logs for the Twitch client to see all messages, joins,
#   reconnects and more.
#   Supported values: 'OFF', 'ON'
#MOONPIE_CONFIG_TWITCH_DEBUG=OFF
# > The name of the twitch account that should be imitated.
#   THIS VARIABLE IS REQUIRED!
#   (The following line is only an example!)
MOONPIE_CONFIG_TWITCH_NAME=twitch_channel_name
# > A Twitch OAuth token (get it from: https://twitchapps.com/tmi/).
#   THIS VARIABLE IS REQUIRED!
#   KEEP THIS VARIABLE PRIVATE!
#   (The following line is only an example!)
MOONPIE_CONFIG_TWITCH_OAUTH_TOKEN=oauth:abcdefghijklmnop

################################################################################
# MOONPIE
# ------------------------------------------------------------------------------
# Customize the moonpie functionality that is enabled per default.
################################################################################
# > The number of hours for which a user is unable to claim a Moonpie after
#   claiming one (less than 24 in case of daily streams).
#   Legacy name: 'MOONPIE_CONFIG_MOONPIE_COOLDOWN_HOURS'
#MOONPIE_CONFIG_MOONPIE_CLAIM_COOLDOWN_HOURS=18
# > The database file path that contains the persistent moonpie data.
#   Legacy name: 'MOONPIE_CONFIG_DB_FILEPATH'
#MOONPIE_CONFIG_MOONPIE_DATABASE_PATH=moonpie.db
# > You can provide a list of commands that should be enabled, if this is empty
#   or not set all commands are enabled (set the value to 'none' if no commands
#   should be enabled).
#   Supported list values: 'about', 'add', 'claim', 'commands', 'delete', 'get', 'leaderboard', 'remove', 'set'
#   Empty list value: 'none'
#   Legacy name: 'MOONPIE_CONFIG_ENABLE_COMMANDS'
#MOONPIE_CONFIG_MOONPIE_ENABLE_COMMANDS=about,add,claim,commands,delete,get,leaderboard,remove,set

################################################################################
# OSU
# ------------------------------------------------------------------------------
# Optional osu! commands that can be enabled.
################################################################################
# > You can provide a list of commands that should be enabled, if this is empty
#   or not set all commands are enabled (set the value to 'none' if no commands
#   should be enabled). If you don't provide osu! API credentials and/or a
#   StreamCompanion connection commands that need that won't be enabled!
#   Supported list values: 'commands', 'last_request', 'np', 'permit_request', 'pp', 'requests', 'rp', 'score'
#   Empty list value: 'none'
#MOONPIE_CONFIG_OSU_ENABLE_COMMANDS=commands,last_request,np,permit_request,pp,requests,rp,score

################################################################################
# OSU API
# ------------------------------------------------------------------------------
# Optional osu! API connection that can be enabled to use more osu! commands or
# detect beatmap requests.
################################################################################
# > The osu! client ID (and client secret) to use the osu! api v2. To get it go
#   to your account settings, Click 'New OAuth application' and add a custom
#   name and URL (https://osu.ppy.sh/home/account/edit#oauth). After doing that
#   you can copy the client ID (and client secret).
#   Legacy name: 'MOONPIE_CONFIG_OSU_CLIENT_ID'
#   KEEP THIS VARIABLE PRIVATE!
#   (The following line is only an example!)
#MOONPIE_CONFIG_OSU_API_CLIENT_ID=1234
# > Check the description of MOONPIE_CONFIG_OSU_API_CLIENT_ID.
#   Legacy name: 'MOONPIE_CONFIG_OSU_CLIENT_SECRET'
#   KEEP THIS VARIABLE PRIVATE!
#   (The following line is only an example!)
#MOONPIE_CONFIG_OSU_API_CLIENT_SECRET=dadasfsafsafdsadffasfsafasfa
# > The default osu! account ID used to check for recent play or a top play on a
#   map.
#   Legacy name: 'MOONPIE_CONFIG_OSU_DEFAULT_ID'
#   (The following line is only an example!)
#MOONPIE_CONFIG_OSU_API_DEFAULT_ID=1185432
# > Automatically recognize osu! beatmap links (=requests) in chat.
#   Supported values: 'OFF', 'ON'
#   Legacy name: 'MOONPIE_CONFIG_OSU_RECOGNIZE_MAP_REQUESTS'
#MOONPIE_CONFIG_OSU_API_RECOGNIZE_MAP_REQUESTS=OFF
# > The database file path that contains the persistent osu! map requests data.
#MOONPIE_CONFIG_OSU_API_RECOGNIZE_MAP_REQUESTS_DATABASE_PATH=osu_map_requests.db
# > If recognizing is enabled (MOONPIE_CONFIG_OSU_API_RECOGNIZE_MAP_REQUESTS=ON)
#   additionally output more detailed information about the map in the chat.
#   This can also be set at runtime and stored persistently in a database but if
#   provided will override the current value in the database on start of the
#   bot.
#   Supported values: 'OFF', 'ON'
#   Legacy name: 'MOONPIE_CONFIG_OSU_RECOGNIZE_MAP_REQUESTS_DETAILED'
#MOONPIE_CONFIG_OSU_API_RECOGNIZE_MAP_REQUESTS_DETAILED=OFF
# > If recognizing is enabled (MOONPIE_CONFIG_OSU_API_RECOGNIZE_MAP_REQUESTS=ON)
#   make it that only messages that used a channel point redeem will be
#   recognized as requests. This can also be set at runtime and stored
#   persistently in a database but if provided will override the current value
#   in the database on start of the bot.
#   (The following line is only an example!)
#MOONPIE_CONFIG_OSU_API_RECOGNIZE_MAP_REQUESTS_REDEEM_ID=651f5474-07c2-4406-9e59-37d66fd34069

################################################################################
# OSU STREAM COMPANION
# ------------------------------------------------------------------------------
# Optional osu! StreamCompanion (https://github.com/Piotrekol/StreamCompanion)
# connection that can be enabled for a much better !np command via either a
# websocket or file interface.
################################################################################
# > osu! StreamCompanion directory (file interface) path to use a running
#   StreamCompanion instance to always get the currently being played beatmap
#   and used mods. You can configure the details via the integrated message
#   parser but since it uses the output of StreamCompanion you can just
#   configure it in there. Go to the section 'Output Patterns' and then edit the
#   used rows (like 'np_all'). You can also change the 'Save event' of a row
#   like for the current mods so the mods will be live updated even if no song
#   is played. (If OSU_STREAM_COMPANION_URL is provided this interface will not
#   be used)
#   (The following line is only an example!)
#MOONPIE_CONFIG_OSU_STREAM_COMPANION_DIR_PATH="C:\Program Files (x86)\StreamCompanion\Files"
# > osu! StreamCompanion URL (websocket interface) to use a running
#   StreamCompanion instance to always get the currently being played beatmap
#   and used mods. (If OSU_STREAM_COMPANION_DIR_PATH is provided this interface
#   will be used over it)
#   (The following line is only an example!)
#MOONPIE_CONFIG_OSU_STREAM_COMPANION_URL=localhost:20727

################################################################################
# SPOTIFY
# ------------------------------------------------------------------------------
# Optional Spotify commands that can be enabled.
################################################################################
# > The database file path that contains the persistent spotify data.
#MOONPIE_CONFIG_SPOTIFY_DATABASE_PATH=spotify.db
# > You can provide a list of commands that should be enabled, if this is empty
#   or not set all commands are enabled (set the value to 'none' if no commands
#   should be enabled). If you don't provide Spotify API credentials the
#   commands won't be enabled!
#   Supported list values: 'commands', 'song'
#   Empty list value: 'none'
#MOONPIE_CONFIG_SPOTIFY_ENABLE_COMMANDS=commands,song

################################################################################
# SPOTIFY API
# ------------------------------------------------------------------------------
# Optional Spotify API connection that can be enabled to use Spotify commands.
################################################################################
# > Provide client id/secret to enable Twitch api calls or Spotify commands (get
#   them by using https://developer.spotify.com/dashboard/applications and
#   creating an application). At the first start a browser window will open
#   where you need to authenticate once.
#   KEEP THIS VARIABLE PRIVATE!
#   (The following line is only an example!)
#MOONPIE_CONFIG_SPOTIFY_API_CLIENT_ID=abcdefghijklmnop
# > Check the description of MOONPIE_CONFIG_SPOTIFY_API_CLIENT_ID.
#   KEEP THIS VARIABLE PRIVATE!
#   (The following line is only an example!)
#MOONPIE_CONFIG_SPOTIFY_API_CLIENT_SECRET=abcdefghijklmnop
# > Providing this token is not necessary but optional. You can get this token
#   by authenticating once successfully using the
#   MOONPIE_CONFIG_SPOTIFY_API_CLIENT_ID and
#   MOONPIE_CONFIG_SPOTIFY_API_CLIENT_SECRET. This will be done automatically by
#   this program if both values are provided (the browser window will open after
#   starting). After a successful authentication via this website the refresh
#   token can be copied from there but since it will be automatically stored in
#   a database this variable does not need to be provided. If a value is found
#   it is automatically written into the database and does not need to be
#   provided after that.
#   KEEP THIS VARIABLE PRIVATE!
#   (The following line is only an example!)
#MOONPIE_CONFIG_SPOTIFY_API_REFRESH_TOKEN=abcdefghijklmnop

################################################################################
# CUSTOM COMMANDS & BROADCASTS
# ------------------------------------------------------------------------------
# Optional configurations for custom commands and broadcasts.
################################################################################
# > The database file path that contains the persistent custom commands and
#   broadcasts data.
#MOONPIE_CONFIG_CUSTOM_COMMANDS_BROADCASTS_DATABASE_PATH=customCommandsBroadcasts.db
# > You can provide a list of commands that should be enabled, if this is empty
#   or not set all commands are enabled (set the value to 'none' if no commands
#   should be enabled).
#   Supported list values: 'add_broadcast', 'add_command', 'commands', 'delete_broadcast', 'delete_command', 'edit_broadcast', 'edit_command', 'list_broadcasts', 'list_commands'
#   Empty list value: 'none'
#MOONPIE_CONFIG_CUSTOM_COMMANDS_BROADCASTS_ENABLED_COMMANDS=add_broadcast,add_command,commands,delete_broadcast,delete_command,edit_broadcast,edit_command,list_broadcasts,list_commands

################################################################################
# TWITCH API
# ------------------------------------------------------------------------------
# Optional Twitch API connection that can be enabled for advanced custom
# commands that for example set/get the current game/title.
################################################################################
# > Provide client id/access token to enable Twitch api calls in commands (get
#   them by using https://twitchtokengenerator.com with the scopes you want to
#   have). The recommended scopes are: `user:edit:broadcast` to edit stream
#   title/game, `user:read:broadcast`, `chat:read`, `chat:edit`.
#   KEEP THIS VARIABLE PRIVATE!
#   (The following line is only an example!)
#MOONPIE_CONFIG_TWITCH_API_ACCESS_TOKEN=abcdefghijklmnop
# > Check the description of MOONPIE_CONFIG_TWITCH_API_ACCESS_TOKEN.
#   KEEP THIS VARIABLE PRIVATE!
#   (The following line is only an example!)
#MOONPIE_CONFIG_TWITCH_API_CLIENT_ID=abcdefghijklmnop
